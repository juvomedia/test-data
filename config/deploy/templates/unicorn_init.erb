#!/bin/sh
### BEGIN INIT INFO
# Provides: unicorn
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Manage unicorn server
# Description: Start, stop, restart unicorn server for a specific application.
### END INIT INFO
set -e

# Feel free to change any of the following variables for your app:
# testo
TIMEOUT=${TIMEOUT-60}
APP_ROOT=<%= current_path %>
PID=<%= unicorn_pid %>
HOME=~<%= unicorn_user %>; export HOME
CMD="cd <%= current_path %>; <%= default_shell %> -c 'bundle exec unicorn -D -c <%= unicorn_config %> -E <%= rails_env %>'"
AS_USER=<%= unicorn_user %>
set -u

OLD_PIN="$PID.oldbin"

sig () {
  test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
  test -s $OLD_PIN && kill -$1 `cat $OLD_PIN`
}

run () {
  if [ "$(id -un)" = "$AS_USER" ]; then
    eval $1
  else
    su -c "$1" - $AS_USER
  fi
}


warn () { 
  echo "$@" >&2
}

bail () { 
  warn "$@" 
  exit 1;
}

start () {
  sig 0 && echo >&2 "Already running" && exit 0
  run "$CMD"
}

stop () { 
  sig QUIT || warn "Not running"
}

wait_for_stop () { 
  tries=5
  while sig 0 && test $tries -gt 0
    do
      sleep 1;
      tries=$(( $tries - 1 ))
    done
  sig 0 && false || true
}

case "$1" in
start)
  start
  ;;
stop)
  stop
  ;;
status)
  extra=""
  test -s "$OLD_PIN" && extra=", oldpid $(cat $OLD_PIN)"
  sig 0 && echo "Running. (pid $(cat $PID)$extra)" || echo "Not running"
  ;;
restart)
  stop && 
    wait_for_stop && 
      start || 
        warn "restart failed"
  ;;
force-stop)
  sig TERM || warn "Not running"
  ;;
reload)
  sig USR2 && echo reloaded OK && exit 0
  warn "Couldn't reload, starting '$CMD' instead"
  run "$CMD"
  ;;
upgrade)
  if sig USR2 && sleep 2 && sig 0 && oldsig QUIT
  then
    n=$TIMEOUT
    while test -s $OLD_PIN && test $n -ge 0
    do
      printf '.' && sleep 1 && n=$(( $n - 1 ))
    done
    echo

    if test $n -lt 0 && test -s $OLD_PIN
    then
      echo >&2 "$OLD_PIN still exists after $TIMEOUT seconds"
      exit 1
    fi
    exit 0
  fi
  echo >&2 "Couldn't upgrade, starting '$CMD' instead"
  run "$CMD"
  ;;
reopen-logs)
  sig USR1
  ;;
*)
  echo >&2 "Usage: $0 <start|stop|restart|upgrade|force-stop|reopen-logs>"
  exit 1
  ;;
esac
